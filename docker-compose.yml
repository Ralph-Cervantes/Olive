services:
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./server/app:/app/app
      - ./data:/app/data
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy

  client:
    build: ./client
    ports:
      - "3000:3000"
    depends_on:
      - server

  pipelines:
    build:
      context: .
      dockerfile: pipelines/Dockerfile
    volumes:
      - ./data:/app/data
    command: python -u /app/dogs.py
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5434:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-data:
